/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package stack;

import java.util.HashMap;
import java.util.Map;
import java.util.Stack;

public class App {

    public static boolean ehCadeiaParentesisValida(String input) {
        Stack<Character> stack = new Stack<Character>();
        
        for(int i=0; i < input.length(); i++) {
            Character curr = input.charAt(i);
            if (curr == '(') {
                stack.add(curr);
            } else {
                if (curr == ')') {
                    if (stack.isEmpty()) {
                        return false;
                    } else {
                        stack.pop();
                    }
                }
            }
        }
        if (stack.isEmpty()) return true;
        return false;
    }

    public static boolean ehCadeiaParentesisEchavesEColchetesValida(String input) {
        Stack<Character> stack = new Stack<Character>();

        for(int i=0; i < input.length(); i++) {
            Character curr = input.charAt(i);
            if (curr == '(' || curr == '{' || curr == '[') {
                stack.add(curr);
            } else {
                if (curr == ')' || curr == '}' || curr == ']') {
                    if (stack.isEmpty()) {
                        return false;
                    } else {
                        Character topo = stack.pop();
                        if (topo == '(' && (curr == '}' || curr == ']')) {
                            return false;
                        }
                        if (topo == '{' && (curr == ')' || curr == ']')) {
                            return false;
                        }
                        if (topo == '[' && (curr == '}' || curr == '}')) {
                            return false;
                        }
                    }
                }
            }
        }
        if (stack.isEmpty()) return true;
        return false;
    }
    
    public static int converterRomanoInteiro(String romano) {
        Map<Character, Integer> conversor = new HashMap<>();
        conversor.put('I', 1);
        conversor.put('V', 5);
        conversor.put('X', 10);
        conversor.put('L', 50);
        conversor.put('C', 100);
        conversor.put('D', 500);
        conversor.put('M', 1000);

        int total = 0;
        int valorAnterior = 0;

        for(int i = romano.length()-1; i >= 0; i--) {
            int valor = conversor.get(romano.charAt(i));
            if (valor >= valorAnterior) {
                total += valor;
            } else {
                total -= valor;
            }
            valorAnterior = valor;
        }

        return total;
    }

    public static void main(String[] args) {

        System.out.println(App.converterRomanoInteiro("XLIV"));
    }
}
