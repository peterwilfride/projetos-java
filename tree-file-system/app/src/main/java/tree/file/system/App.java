/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package tree.file.system;

public class App {
    public static void main(String[] args) {
        
        Tree node = new Tree(".");

        node.left = new Tree("animais");
        node.left.left = new Tree("cachorro");
        node.left.right = new Tree("gato");

        node.right = new Tree("objetos");
        node.right.left = new Tree("bola");

        preorder(node);
    }

    public static void preorder(Tree node) {
        if (node == null) {
            return;
        }
        System.out.println(node.data);
        preorder(node.left);
        preorder(node.right);
    }

    public static int findDepth(Tree root, String x) {

        if (root == null) {
            return -1;
        }
 
        // Initialize distance as -1
        int dist = -1;
    
        // Check if x is current node=
        if ((root.data == x)
    
            // Otherwise, check if x is
            // present in the left subtree
            || (dist = findDepth(root.left, x)) >= 0
    
            // Otherwise, check if x is
            // present in the right subtree
            || (dist = findDepth(root.right, x)) >= 0)
    
            // Return depth of the node
            return dist + 1;
    
        return dist;
    }
}
